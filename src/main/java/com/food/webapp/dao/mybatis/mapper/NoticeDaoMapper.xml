<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.food.webapp.dao.NoticeDao">
	<select id="getList" resultType="com.food.webapp.entity.NoticeView">
			SELECT * FROM NoticeView where ${param2} like '%${param3}%' order by regDate desc limit ${(page-1)*10}, 10
	</select>
	
	<select id="getListAdmin" resultType="com.food.webapp.entity.Notice">
		select * from NoticeView
		<if test="field != 'all'">
			where ${field} like '%${query}%' order by regDate desc limit ${(page-1)*10}, 10
  		</if>
  		<if test="field == 'all'">
			where id like '%${query}%' 
			or title like '%${query}%' 
			or writerName like '%${query}%' 
			or content like '%${query}%' 
			order by regDate desc limit ${(page-1)*10}, 10
  		</if>
	</select>
	
	<select id="getCountAdmin" resultType="int">
		<!-- select count(*) count FROM Member where ${field} like '%${query}%' -->
		select count(*) count FROM NoticeView
		<if test="field != 'all'">
			where ${field} like '%${query}%'
		</if>
		<if test="field == 'all'">
			where id like '%${query}%' 
			or title like '%${query}%' 
			or writerName like '%${query}%' 
			or content like '%${query}%' 
		</if>	
	</select>
	
	<select id="get" resultType="com.food.webapp.entity.NoticeView">
			select * from NoticeView where id=#{id}
	</select>
	
	<select id = "getPrev" resultType="com.food.webapp.entity.NoticeView">
		select * from NoticeView
		where id &lt; CAST(#{id} AS UNSIGNED)
		order by regDate desc
		limit 1
	</select>
	
	<select id = "getNext" resultType="com.food.webapp.entity.NoticeView">
		select * from NoticeView
		where id &gt; CAST(#{id} AS UNSIGNED)
		order by regDate desc
		limit 1
	</select>
	
	<select id = "getNextId" resultType="String">
			select IFNULL(max(cast(id as unsigned)), 0)+1 from Notice
	</select>
	
	<insert id="insert" parameterType="com.food.webapp.entity.Notice">
		<selectKey order="BEFORE" keyProperty="id" resultType="String">
			select IFNULL(max(cast(id as unsigned)), 0)+1 from Notice
		</selectKey>
			
			insert into Notice(id, title, content, writerName, fileName)
			value(#{id}, #{title}, #{content}, #{writerName}, #{fileName});
	</insert>
	
	<update id="edit" parameterType="com.food.webapp.entity.Notice">
		<!-- update Notice(title, content) set(#{title}, #{content}) where id = ${id} -->
		update Notice set title=#{title}, content=#{content} where id = ${id}
	</update>
</mapper>