<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.food.webapp.dao.MemberDao">
	<!-- <select id="getListAdmin" resultType="com.food.webapp.entity.Member">
		select * from Member where ${field} like '%${param3}%' order by regDate desc limit ${(page-1)*10}, 10
	</select> -->
	
	<select id="getListAdmin" resultType="com.food.webapp.entity.Member">
		select * from Member 
		<if test="field != 'all'">
			where ${field} like '%${query}%' order by regDate desc limit ${(page-1)*10}, 10
  		</if>
  		<if test="field == 'all'">
			where id like '%${query}%' 
			or email like '%${query}%' 
			or nickName like '%${query}%' 
			or mentor like '%${query}%' 
			order by regDate desc limit ${(page-1)*10}, 10
  		</if>
	</select>
	
	<select id="getCountAdmin" resultType="int">
		<!-- select count(*) count FROM Member where ${field} like '%${query}%' -->
		select count(*) count FROM Member
		<if test="field != 'all'">
			where ${field} like '%${query}%'
		</if>
		<if test="field == 'all'">
			where id like '%${query}%' 
			or email like '%${query}%' 
			or nickName like '%${query}%' 
			or mentor like '%${query}%' 
		</if>	
	</select>

	<insert id="insert" parameterType="com.food.webapp.entity.Member">
		<selectKey order="BEFORE" keyProperty="id" resultType="int">
		select IFNULL(max(cast(id as unsigned)), 0)+1 from Member;
		</selectKey>
			insert into Member(id, email, pwd, nickName, image, mentor)
			values(#{id}, #{email} ,#{pwd}, #{nickName}, #{image}, #{mentor});
	</insert>
	
	<select id="Login" resultType="com.food.webapp.entity.Member">
		select email, pwd from Member WHERE email = #{email} and pwd = #{pwd};
	</select>
	
	<select id="get" resultType="com.food.webapp.entity.Member" >
		select * from Member where email = #{loginEmail}
	</select>
	
	<select id="editUserInfo" resultType="com.food.webapp.entity.Member" parameterType="com.food.webapp.entity.Member">
		select * from Member where email = #{email}
	</select>
	
	<select id="sameCheckId" parameterType="com.food.webapp.entity.Member" resultType="Integer" >
		select count(*) from Member where nickName = #{nickName}
	</select>
	
	<select id="getMember" resultType="com.food.webapp.entity.Member" >
		select * from Member where nickName = #{nickName}
	</select>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from Member where id = #{id}
	</delete>
	
	<select id="detail" parameterType="java.lang.Integer" resultType="com.food.webapp.entity.Member" >
		select * from Member where id = #{id}
	</select>
	
	<update id="edit">
		update Member set nickName=#{nickName}, role=#{role}, mentor=#{mentor} where id=#{id}
	</update>
	
	<update id="editMember">
		update Member set nickName=#{nickName}, mentor=#{mentor}, pwd=#{pwd}, image=#{image}  where email=#{email}
	</update>
	
	
</mapper>